<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<!-- ============================ FILTER CHAIN ================================== -->
	<!--  if you wish to use channel security add "channelProcessingFilter,"          -->
	<!--  in front of "httpSessionContextIntegrationFilter" in the list below         -->
	<!-- ============================================================================ -->

	<bean id="filterChainProxy"
		class="org.acegisecurity.util.FilterChainProxy">
		<property name="filterInvocationDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON
				PATTERN_TYPE_APACHE_ANT
				/**=concurrentSessionFilter,httpSessionContextIntegrationFilter,logoutFilter,authenticationProcessingFilter,basicProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
			</value>
		</property>
	</bean>

	<!-- 认证管理器 OK -->
	<bean id="authenticationManager"
		class="org.acegisecurity.providers.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider" /><!-- 使用基于DAO的认证提供者提供的认证服务 -->
				<ref local="anonymousAuthenticationProvider"/>
			</list>
		</property>
		
		<property name="sessionController">
			<ref bean="concurrentSessionController" />
		</property>
	</bean>
	
	<!-- 匿名用户验证提供者 OK -->
    <bean id="anonymousAuthenticationProvider" 
	      class="org.acegisecurity.providers.anonymous.AnonymousAuthenticationProvider">
        <property name="key">
       	    <value>foobar</value>
	    </property>
    </bean>
	
	<!-- 定义用户验证器  -->
	<bean id="daoAuthenticationProvider"
		class="com.lesaas.core.authority.MyDaoAuthenticationProvider">
		<property name="userDetailsService">
			<ref local="hibernateDaoImpl" />
		</property><!-- 根据用户名获取系统中真实的UserDetails对象的服务类-->
		<property name="passwordEncoder" ref="passwordEncoder" />
		 
	</bean>
	
	<bean id="hibernateDaoImplTarget"
		class="com.lesaas.core.authority.HibernateDao">
	</bean>

	<bean id="hibernateDaoImpl"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				org.acegisecurity.userdetails.UserDetailsService
			</value>
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="userServiceTransactionInterceptor" />
				<idref local="hibernateDaoImplTarget" />
			</list>
		</property>
	</bean>

	<bean id="userServiceTransactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributeSource">
			<value>
				org.acegisecurity.userdetails.UserDetailsService.loadUserByUsername=PROPAGATION_REQUIRED
			</value>
		</property>
	</bean>

	<bean id="passwordEncoder"
		class="org.acegisecurity.providers.encoding.Md5PasswordEncoder" />

	<bean id="loggerListener"
		class="org.acegisecurity.event.authentication.LoggerListener" />

	<bean id="basicProcessingFilter"
		class="org.acegisecurity.ui.basicauth.BasicProcessingFilter">
		<property name="authenticationManager">
			<ref local="authenticationManager" />
		</property>
		<property name="authenticationEntryPoint">
			<ref local="basicProcessingFilterEntryPoint" />
		</property>
	</bean>

	<bean id="basicProcessingFilterEntryPoint"
		class="org.acegisecurity.ui.basicauth.BasicProcessingFilterEntryPoint">
		<property name="realmName">
			<value>Letech System Realm</value>
		</property>
	</bean>

	<!-- ======================================================================== -->
	<!-- 通过HttpSession转存请求之间的SecurityContext过滤器 OK                       -->
	<!--                                                                       -->
	<!-- ======================================================================== -->
	<bean id="httpSessionContextIntegrationFilter"
		class="org.acegisecurity.context.HttpSessionContextIntegrationFilter">
	</bean>

	<bean id="securityContextHolderAwareRequestFilter"
		class="org.acegisecurity.wrapper.SecurityContextHolderAwareRequestFilter" />

	<!-- ======================================================================== -->
	<!-- 匿名用户处理过滤器 OK                                                         -->
	<!--                                                                       -->
	<!-- ======================================================================== -->
    <bean id="anonymousProcessingFilter" 
         class="org.acegisecurity.providers.anonymous.AnonymousProcessingFilter">
        <property name="key">
        	<value>foobar</value>
		</property>
        <property name="userAttribute">
        	<value>anonymousUser,ROLE_ANONYMOUS</value>	
		</property>
    </bean>

	<!-- ======================================================================== -->
	<!-- 身份认证处理过滤器 OK                                                            -->
	<!--                                                                       -->
	<!-- ======================================================================== -->
	<bean id="authenticationProcessingFilter"
		class="com.lesaas.core.authority.UserAuthenticationProcessingFilter">

		<property name="authenticationManager"
			ref="authenticationManager" /><!-- 注入认证管理器 -->
		<property name="authenticationFailureUrl"><!-- 验证失败后转向的URL -->
			<value>/login.jsp?errorCode=001</value>
		</property>
		<property name="alwaysUseDefaultTargetUrl">
			<value>true</value>
		</property>
		<property name="defaultPageUrl"><!-- 验证成功后转向的URL -->
			<value>/init.jsp</value>
		</property>
		<property name="pswPageUrl"><!-- 验证成功后转向的URL -->
			<value>/init.jsp</value>
		</property>
		<property name="managerPageUrl"><!-- 验证成功后转向的URL -->
			<value>/addManager.jsp</value>
		</property>
		<property name="managerErrorUrl"><!-- 验证失败后转向的URL -->
			<value>/login.jsp?errorCode=003</value>
		</property>
		<property name="UKeyIDIsNotSame">
			<value>/login.jsp?errorCode=004</value>
		</property>
		<property name="filterProcessesUrl">
			<value>/j_acegi_security_check</value><!-- 过滤器处理的URL -->
		</property>
		 
	</bean>
	
	<!-- ======================================================================== -->
	<!-- 退出系统过滤器 OK                                                            -->
	<!--                                                                       -->
	<!-- ======================================================================== -->
	<bean id="logoutFilter"
		class="org.acegisecurity.ui.logout.LogoutFilter">
		<!-- 退出后指向的 URL -->
		<constructor-arg value="/login.jsp" />
		<!-- 退出系统前需要执行的操作 -->
		<constructor-arg>
			<list>
				<bean
					class="org.acegisecurity.ui.logout.SecurityContextLogoutHandler" />
				<bean
					class="com.lesaas.core.authority.SessionLogoutHandler" />
			</list>
		</constructor-arg>
		<property name="filterProcessesUrl">
			<value>/j_acegi_logout</value><!-- 过滤器处理的URL -->
		</property>
	</bean>
	
	<!-- ======================================================================== -->
	<!-- 设置当前Session的配置                                                              -->
	<!-- ======================================================================== -->
	
    <bean id="concurrentSessionFilter"
		class="org.acegisecurity.concurrent.ConcurrentSessionFilter">
		<property name="sessionRegistry">
			<ref local="sessionRegistry" />
		</property>
		<property name="expiredUrl" value="/login.jsp?errorCode=002" />
	</bean>
	<!-- 设置当前Session并发数  -->
	<bean id="concurrentSessionController"
		class="org.acegisecurity.concurrent.ConcurrentSessionControllerImpl">
		<property name="maximumSessions">
			<value>50</value>
		</property>
		<property name="sessionRegistry">
			<ref local="sessionRegistry" />
		</property>
	</bean>
	<bean id="sessionRegistry"
		class="org.acegisecurity.concurrent.SessionRegistryImpl" />


	<!-- ======================================================================== -->
	<!-- 异常转换过滤器，主要是处理AccessDeniedException和AuthenticationException      -->
	<!-- 将给每个异常找到合适的"去向"  OK                                             -->
	<!-- ======================================================================== -->

    <bean id="exceptionTranslationFilter"
		class="org.acegisecurity.ui.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<bean
				class="org.acegisecurity.ui.webapp.AuthenticationProcessingFilterEntryPoint">
				<property name="loginFormUrl" value="/login.jsp?errorCode=002" />
				<property name="forceHttps" value="false" />
			</bean>
		</property>
		<property name="accessDeniedHandler">
			<bean
				class="org.acegisecurity.ui.AccessDeniedHandlerImpl">
				<!-- 访问权限的错误指向  -->
				<property name="errorPage" value="/error.jsp?errorCode=1580" />
			</bean>
		</property>
	</bean>
	
	<!-- ======================================================================== -->
	<!-- === filterInvocationInterceptor在执行转向url前     OK  ??               == -->
	<!-- === 中设定的用户权限信息.检查objectDefinitionSource                       == -->
	<!-- ======================================================================== -->

	<bean id="filterInvocationInterceptor"
		class="org.acegisecurity.intercept.web.FilterSecurityInterceptor">
		<property name="authenticationManager"
			ref="authenticationManager" />
		<property name="accessDecisionManager"
			ref="httpRequestAccessDecisionManager" />
 
		<property name="objectDefinitionSource">
			<value>
				CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON<!-- 把URL全部转化为小写 -->
				PATTERN_TYPE_APACHE_ANT<!-- 以ANT的形式来配置路径 -->
				/login.jsp=ROLE_USER,ROLE_ANONYMOUS
				/initparam.jsp=ROLE_ANONYMOUS
				/**=ROLE_USER
			</value>
		</property>
		
	</bean>

	<bean id="httpRequestAccessDecisionManager"
		class="org.acegisecurity.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions">
			<value>false</value>
		</property>
		<property name="decisionVoters">
			<list>
				<bean class="org.acegisecurity.vote.RoleVoter">
				   <property name="rolePrefix">
			          <value>ROLE_</value>
		           </property>
				</bean>
			 
			</list>
		</property>
	</bean>

	<!--  ========================================== -->
	<!--  === 存放所有资源缓存               === -->
	<!--  ========================================== -->
	
	<bean id="cacheManager"
		 class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
	
	<bean id="userCacheBackend" 
		class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager">
			<ref local="cacheManager"/>
		</property>
		<property name="cacheName">
			<value>userCache</value>
		</property>
	</bean>
	
	<bean id="userCache"
		class="org.acegisecurity.providers.dao.cache.EhCacheBasedUserCache">
		<property name="cache">
			<ref local="userCacheBackend" />
		</property>
	</bean>
</beans>
